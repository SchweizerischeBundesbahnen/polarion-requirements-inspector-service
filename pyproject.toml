[project]
name = "polarion-requirements-inspector-service"
version = "0.0.0"  # the version is controlled by pipeline
description = "Service for python_requirements_inspector"
authors = [
    {name = "SBB Polarion Team", email = "polarion-opensource@sbb.ch"},
]
license = "Apache License 2.0"
readme = "README.md"
requires-python = ">=3.12,<3.13"
dynamic = ["dependencies"]
# Dependencies moved back to [tool.poetry.dependencies] for Renovate compatibility
# See: https://github.com/renovatebot/renovate/issues/33509
# TODO: Migrate back to [project.dependencies] when Renovate adds Poetry v2 support
# dependencies = [
#     "python-requirements-inspector @ https://github.com/SchweizerischeBundesbahnen/python-requirements-inspector/releases/download/4.0.0/python_requirements_inspector-4.0.0-py3-none-any.whl",
#     "fastapi==0.115.12",
#     "uvicorn==0.34.2",
# ]

[tool.poetry]
packages = [{include = "app"}]

# this duplication and legacy format must be kept until Renovate support is added for [project.dependencies] for poetry-lock updates
# for more information check comments above
[tool.poetry.dependencies]
python = ">=3.12,<3.13"
python-requirements-inspector = {url = "https://github.com/SchweizerischeBundesbahnen/python-requirements-inspector/releases/download/4.0.0/python_requirements_inspector-4.0.0-py3-none-any.whl"}
fastapi = "0.118.0"
uvicorn = "0.37.0"

[tool.poetry.group.dev.dependencies]
pre-commit = "4.3.0"
ruff = "0.13.3"
mypy = "1.18.2"

[tool.poetry.group.test.dependencies]
tox = "4.30.3"
docker = "7.1.0"
pytest = "8.4.2"
httpx = "0.28.1"
coverage = "7.10.7"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 240
fix = true
show-fixes = true
exclude = [
    "tests/*"  # Exclude all test files from linting
]

[tool.ruff.lint]
extend-select = [
    # --- Recommended ---
    "E", "W", # pycodestyle errors and warnings
    "F",      # Pyflakes
    "I",      # isort
    "C4",     # flake8-comprehensions
    "C90",    # mccabe
    "B",      # flake8-bugbear
    "UP",     # pyupgrade
    "S",      # flake8-bandit
    "PL",     # Pylint
    "PTH",    # flake8-pathlib
    "TCH",    # type-checking imports
    "SIM",    # flake8-simplify
    "T20",    # flake8-print
    "ERA",    # eradicate
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "S101", # No assert rule (bandit)
    "PLR2004" # No magic values (pylint)
]

[tool.ruff.format]
line-ending = "lf"

[tool.mypy]
explicit_package_bases = true
disallow_untyped_defs = true
exclude = "tests/.*|venv/.*"
